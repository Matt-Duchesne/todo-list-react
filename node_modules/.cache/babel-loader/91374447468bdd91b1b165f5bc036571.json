{"ast":null,"code":"var _jsxFileName = \"/home/shiki/todo-list-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css'; //Importing components\n\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]); //on initial load\n\n  useEffect(() => {\n    getDataLocal();\n  }, []); //use effect\n\n  useEffect(() => {\n    filterHandler();\n    saveDataLocal();\n  }, [todos, status]); //functions\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'done':\n        setFilteredTodos(todos.filter(todo => todo.done === true));\n        break;\n\n      case 'notDone':\n        setFilteredTodos(todos.filter(todo => todo.done === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }; ///save data locally\n\n\n  const saveDataLocal = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getDataLocal = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localData = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inputText: inputText,\n      todos: todos,\n      setTodos: setTodos,\n      setInputText: setInputText,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      filteredTodos: filteredTodos,\n      setTodos: setTodos,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"opYGpOTQJ7j5sKgoXtR+Um2kkaM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/shiki/todo-list-react/src/App.js"],"names":["React","useEffect","useState","Form","ToDoList","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","getDataLocal","filterHandler","saveDataLocal","filter","todo","done","localStorage","setItem","JSON","stringify","getItem","localData","parse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CALa,CAOb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT,CARa,CAYb;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa;AACbC,IAAAA,aAAa;AACd,GAHQ,EAGN,CAACR,KAAD,EAAQE,MAAR,CAHM,CAAT,CAba,CAkBb;;AACA,QAAMK,aAAa,GAAG,MAAM;AAC1B,YAAOL,MAAP;AACE,WAAK,MAAL;AACEG,QAAAA,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,IAAnC,CAAD,CAAhB;AACA;;AACF,WAAK,SAAL;AACEN,QAAAA,gBAAgB,CAACL,KAAK,CAACS,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,KAAnC,CAAD,CAAhB;AACA;;AACF;AACEN,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACA;AATJ;AAWD,GAZD,CAnBa,CAiCb;;;AACA,QAAMQ,aAAa,GAAG,MAAM;AACxBI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAef,KAAf,CAA9B;AACH,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACzB,QAAGM,YAAY,CAACI,OAAb,CAAqB,OAArB,MAAmC,IAAtC,EAA2C;AACzCJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA9B;AACD,KAFD,MAEK;AACH,UAAIE,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACI,OAAb,CAAqB,OAArB,CAAX,CAAhB;AACAf,MAAAA,QAAQ,CAACgB,SAAD,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AACM,MAAA,SAAS,EAAEnB,SADjB;AAEM,MAAA,KAAK,EAAEE,KAFb;AAGM,MAAA,QAAQ,EAAEC,QAHhB;AAIM,MAAA,YAAY,EAAEF,YAJpB;AAKM,MAAA,SAAS,EAAEI;AALjB;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE,QAAC,QAAD;AACM,MAAA,aAAa,EAAEC,aADrB;AAEM,MAAA,QAAQ,EAAEH,QAFhB;AAGM,MAAA,KAAK,EAAED;AAHb;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlEQH,G;;KAAAA,G;AAoET,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\n\n//Importing components\nimport Form from \"./components/Form\"\nimport ToDoList from \"./components/ToDoList\"\n\nfunction App() {\n  //states\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //on initial load\n  useEffect(() => {\n    getDataLocal();\n  }, []);\n\n  //use effect\n  useEffect(() => {\n    filterHandler();\n    saveDataLocal();\n  }, [todos, status]);\n\n  //functions\n  const filterHandler = () => {\n    switch(status){\n      case 'done':\n        setFilteredTodos(todos.filter(todo => todo.done === true));\n        break;\n      case 'notDone':\n        setFilteredTodos(todos.filter(todo => todo.done === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  ///save data locally\n  const saveDataLocal = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  const getDataLocal = () => {\n    if(localStorage.getItem(\"todos\") ===  null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n      let localData = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localData);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To Do List</h1>\n      </header>\n      <Form \n            inputText={inputText} \n            todos={todos} \n            setTodos={setTodos} \n            setInputText={setInputText}\n            setStatus={setStatus}      \n      />\n      <ToDoList \n            filteredTodos={filteredTodos} \n            setTodos={setTodos} \n            todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}